Important/Must read:
Structure and Interpretation of Computer Programs, Harold Abelson --Have it, can start here
The Mythical Man-Month: Essays on Software Engineering, Frederick P. Brooks Jr
The Art of Computer Programming, Donald Knuth 
The Pragmatic Programmer: From Journeyman to Master, Andrew Hunt, David Thomas
Introduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, & Clifford Stein -- also called CLRS with the author's initials
Design Patterns: Elements of Reusable Object-Oriented Software, Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides -- Not terribly interested in OOP but it could still be interesting
The Elements of Programming Style, Brian W. Kernighan, P. J. Plauger

Interesting/Can read:
Structured Programming (https://seriouscomputerist.atariverse.com/media/pdf/book/Structured%20Programming.pdf)
Categories for the Working Mathematician (Saunders Mac Lane)
Comprehending Monads (Philip Wadler)
Concern for Correctness as a Guiding Principle for Program Composition.(Dijkstra, https://www.cs.utexas.edu/~EWD/transcriptions/EWD02xx/EWD288.html)
Invariant based programming: basic approach and teaching experiences (Ralph-Johan Back, http://users.abo.fi/backrj/LogicAndReasoning/material/Invariant%20Based%20ProgrammingBasic%20appraoch.pdf)
TBD


Read:
TBD
